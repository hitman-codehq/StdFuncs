{InvalidGroup} 

[InvalidSubSection]

(InvalidSection)

; This should not be found as it is not in a subsection

InvalidInteger1 = NotFound

; This section name and the following subsection name both have a space or
; a tab after their last character to test white space stripping functionality.
; Some of these sections, subsections and groups also have spaces in their names
; so they double as a test to ensure spaces can be used

	(Config File) 

 [General]	

ValidNumber1 = 42
ValidNumber2=42
ValidNumber3= 42
ValidNumber4 =42
ValidNumber5		=		42

; This should be found but not the one in the duplication section/subsection below

ValidString1  = 	Valid1

; This should fail to be found when read from InvalidSection but should succeed
; when read from ConfigFile

InvalidInteger1=Found

[Next Sub Section]

; This should be found but not the one in the duplication section/subsection below

ValidString2  = 	Valid2

 (ConfigFile)

	[General]

ValidString1 = NotFound

[NextSubSection]

ValidString2 = 	NotFound

(MalformedSection

[ValidSubSection]

ValidKey = Ok

(ValidSection)

[MalformedSubSection

ValidKey = Ok

[SyntaxHighlighting]

{C / C++}

SyntaxExtensions = .cpp;.c;.h
CommentDelimiters = //
CommentDelimiters = /* */

Keywords = "#define" "#elif" "#if" "#ifdef" "#ifndef" "#else" "#endif" "#include"
Keywords "char" "const" "int" "if" "else" "static" "struct" "true" "false" "void"

{Python}

SyntaxExtensions = .py
CommentDelimiters = #

Keywords "break" "def" "else" "except" "for" "global" "if" "import" "in" "not" "try"
